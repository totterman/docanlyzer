{
  "title": "Flerspråklig investeringsassistent",
  "error": "Det har oppstått en systemfeil:",
  "home2": "I tillegg til innlogging er frontenden flerspråklig. Du kan velge mellom svensk, finsk og engelsk i demoen. Innlogging kan prøves med:",
  "home3": "Fronten er laget med React og Typescript, og utseendet ved hjelp av Tailwind CSS. React Hooks bruker useContext, useEffect, useLoaderData og useReducer. Funksjonene Pagestyle, Warningstyle og Sectionstyle reduserer behovet for å gjenta HTML-kode.",
  "explain": "Forklare",
  "instructions": "Instruksjoner",
  "instruction1": "Spør assistenten om årsrapportinformasjon for 2023 fra selskaper:",
  "instruction2": "Aker, DnB, Huhtamäki, Nokia, Sandvik, Sanoma, Scania, Skanska, Telenor, UPM, Volvo, Yara.",
  "instruction3": "Assistenten forstår foreløpig kun engelsk.",
  "instruction4": "Et godt spørsmål:",
  "instruction5": "\"What are the main strategic goals of Sanoma?\"",
  "instruction6": "ADVARSEL: Denne appen er kun for demonstrasjonsformål. IKKE stol på svarene på noen måte!",
  "question": "Spørsmål:",
  "send": "Sende",
  "clear": "Klar",
  "ex1q": "Hva er formålet med denne webappen?",
  "ex1a": "Demonstrere hvordan ikke-offentlig informasjon kan brukes i et AI-program. Metoden kalles Retrieval Augmented Generation, der nye dokumenter introduseres i AI-språkmodellens kunnskapsbase for å forbedre kvaliteten på svarene. Metoden er mye raskere og billigere enn å finjustere en eksisterende språkmodell, eller trene en ny språkmodell.",
  "ex2q": "Hvilken AI / LLM / modell / hva bruker du?",
  "ex2a": "Utviklingen ble gjort med Ollama som kjørte i en Docker-container. Mistral ble brukt som modeller for chat og nomic-embed tekst for innebygging. Denne forekomsten kjører i Azure Spring Apps og bruker Azure OpenAI med GPT 3.5 Turbo 4k-modellen.",
  "ex3q": "Et øyeblikk! Sier du at en AI-språkmodell kan kjøre... på våre egne datamaskiner på kontoret?",
  "ex3a": "Ja! God (= dyr) maskinvare forbedrer brukerens opplevelse. Men den grunnleggende ideen er at du kan kjøre AI-infrastrukturen din helt innenfor ditt eget sikre nettverk. Du trenger med andre ord ikke å sende sensitiv informasjon på offentlige nettverk.",
  "ex4q": "Og resten av teknologien? Trenger vi flere data scientists?",
  "ex4a": "De kan absolutt forbedre kvaliteten på svarene! Denne applikasjonen er derimot sammensatt av vanlige Java-komponenter for bedrifter. Den består av et React-brukergrensesnitt og en Spring Boot-server, ikke noe mer intrikat. Det bør være ganske enkelt å koble til dine nåværende bedriftssystemer, spesielt hvis du allerede bruker Java / Spring / JavaScript.",
  "ex5q": "Hvorfor årsrapporter?",
  "ex5a": "For denne demonstrasjonen er det behov for nye data, som ikke finnes i en eksisterende språkmodell. Disse årsrapportene er ganske ferske og er hentet direkte fra det respektive selskapets nettsider.",
  "ex6q": "Har dere noen tilknytning til de aktuelle selskapene?",
  "ex6a": "Nei. Absolutt ikke. Selskapene ble valgt fordi de er godt kjent, og årsrapportene var lett tilgjengelige.",
  "ex7q": "Jeg merker at assistenten noen ganger gir tvilsomme eller helt gale svar. Hvorfor det?",
  "ex7a": "I årsrapporter presenteres ofte de viktigste dataene i tabeller. I en PDF-fil kan tabellene struktureres på svært forskjellige måter, noe som er svært krevende for programmet som laster filene. Dette er den største årsaken til feil svar.",
  "ex8q": "Er det håp om forbedring?",
  "ex8a": "Det er. Programvarebiblioteker utvikler seg i et raskt tempo, og nye metoder blir tilgjengelige.",
  "ex9q": "Planlegger du å videreutvikle applikasjonen?",
  "ex9a": "Ja, selvfølgelig! For eksempel, for å forbedre påliteligheten til svarene, kan den underliggende grafdatabasen utnyttes bedre. Dataene, uansett hvilken form de kommer, kan, med AI-assistanse, ordnes i en taksonomi, som grafdatabasen kan reprodusere.",
  "ex10q": "Heftig! Hvordan får vi tak i deg?",
  "ex10a1": "Slipp en e-post til ",
  "ex10a2": " og forvent et raskt svar. Når det er sagt, som eneeier, synes jeg noen ganger det er upraktisk å være konstant online.",
  "ttHomepage": "Til hjemmeside",
  "ttClear": "Tøm chatteloggen",
  "schema": "Systemskjema",
  "scA": "System oppsett",
  "scB": "Du bruker produksjonsforekomsten av appen. Den kjører i en beholder på Azure Spring Apps. Azure OpenAI brukes som LLM og Neo4j AURA DB som grafdatabase. Begge disse er skybaserte tjenester for å unngå kostnadene ved å kjøre flere Azure-beholdere.",
  "scC": "Utviklingen kjører på en Linux-arbeidsstasjon med 32 GB RAM og en GPU. En Spring Boot-app leser PDF-filer og sender innholdet til nlp-ingestor for analyse i JSON-blokker, som Spring Boot-appen organiserer i en trestruktur. Under utvikling kjører både neo4j-databasen og Ollama LLM i Docker-containere.",
  "sc1": "En samling PDF-dokumenter behandles av Spring Boot-appen og sendes til nlp-ingestor.",
  "sc2": "nlp-ingestor kjører i en Docker-beholder. Den mottar en PDF-fil og analyserer innholdet i JSON-blokker. JSON-blokkene blir merket som overskrifter, tabeller etc.",
  "sc3": "Spring Boot-appen mottar JSON-blokkene og bygger fra dem en trestruktur, som speiler den opprinnelige PDS-dokumentstrukturen.",
  "sc4": "Spring Boot-appen laster de trestrukturerte dokumentblokkene inn i neo4j-databasen. Blokktyper tilordnes som enheter, og relasjonene deres følger trestrukturen.",
  "sc5": "Innebygginger fra dokumentblokkene opprettes ved hjelp av en LLM-innebyggingsmodell. Innebygginger lagres i neo4j-databasen. Relasjoner fra embeddingene til deres opprinnelsestekstblokk lagres også i neo4j.",
  "sc6": "Brukere (= deg) kan stille spørsmål til systemet gjennom dette React-brukergrensesnittet. Spørsmålet mates til AI-systemet, som søker de mest like tekststykkene fra neo4j-databasen.",
  "sc7": "Ved å bruke de mest like tekststykkene, formulerer LLM et svar på spørsmålet og returnerer det til brukeren.",
  "scD": "Struktur for grafdatabaseelementer",
  "scE": "Strukturen til neo4j-databasen. Et dokument (Document) består av seksjoner (Section), som kan være tekstbiter (Chunk) eller tabeller (Table). Med andre ord, seksjoner tilhører dokumenter, eller (underavsnitt) seksjoner på høyere nivå. Tekstbiter og tabeller hører hjemme i seksjoner, og har innebygginger (Embedding) konstruert fra tekstinnholdet.",
  "scF": "Takk",
  "scG": "Joshua Yu og Ambit Shukla gjorde grunnarbeidet og publiserte det på GitHub.",
  "scH": ""
}
